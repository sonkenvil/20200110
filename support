    public static String signature(String privateKeyStr, String message, String algorithm) throws NoSuchAlgorithmException, InvalidKeyException, SignatureException {
        Signature sign = Signature.getInstance(StringUtils.isEmpty(algorithm) ? "SHA256withRSA" : algorithm);
        PrivateKey privateKey = getPrivateKeyFromString(privateKeyStr);
        sign.initSign(privateKey);
        sign.update(message.getBytes(StandardCharsets.UTF_8));
        return new String(Base64.encodeBase64(sign.sign()));
    }


    private static boolean verifySignature(PublicKey publicKey, String signature, String message, String algorithm) {
        boolean bResult = false;
        try {
            Signature verifyAlgorithm = Signature.getInstance(StringUtils.isEmpty(algorithm) ? "SHA256withRSA" : algorithm);
            verifyAlgorithm.initVerify(publicKey);
            verifyAlgorithm.update(message.getBytes(StandardCharsets.UTF_8));
            bResult = verifyAlgorithm.verify(Base64.decodeBase64(signature));
        } catch (Exception ex) {
            log.error("[Encryption][RsaUtil][verifySignature][ERROR]ex: {}", ex.getMessage());
        }
        return bResult;
    }
