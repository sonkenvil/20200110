	public Boolean verify(String partnerCode, String data, String signedData, DecodeMode decodeMode)
			throws Exception {
		log.info("ESignatureServices::verify()");
		log.info("\t\t\t====== Start Verifing Data .... ============");
		PublicKey pubKey = null;
		String algo256 = "SHA256withRSA";
		try {
			Esignature esign = getPartnerCertificate(partnerCode);
			log.info("Verify signature algorithm={}", esign.getAlgName());
				pubKey = getPublicKey(esign.getCertData());
			Signature signature = Signature.getInstance(esign.getAlgName(), "BC");
			byte[] sig = null;
			if (DecodeMode.base64.equals(decodeMode)) {
				sig = Base64.decodeBase64(signedData.getBytes());
			} else if (DecodeMode.hex.equals(decodeMode)){
				sig = HexUtils.fromHexString(signedData);
			}
			byte[] message = data.getBytes();
			signature.initVerify(pubKey);
			signature.update(message);
			Boolean isVerify = signature.verify(sig);
			log.info("========End OK==========");
			return isVerify;

		} catch (NotFoundException err) {
			throw err;
		}
		catch (Exception e) {
			log.error("Error={}", e);
			throw e;
		}


